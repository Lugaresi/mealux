#! /bin/bash
### BEGIN INIT INFO
# Provides:          rspamd
# Required-Start:    $syslog $remote_fs
# Required-Stop:     $syslog $remote_fs
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Rspamd spam filtering system
# Description:       Rspamd is fast and modular spam filtering system
### END INIT INFO

# Author: Vsevolod Stakhov <vsevolod@rspamd.com>

# PATH should only include /usr/* if it runs after the mountnfs.sh script
PATH=/sbin:/usr/sbin:/bin:/usr/bin
DESC="Rspamd"
NAME=rspamd
DAEMON=/usr/bin/$NAME
RSPAMADM=/usr/bin/rspamadm
DAEMON_ARGS="-c /etc/rspamd/rspamd.conf"
DESC="rapid spam filtering system"
PIDFILE=/run/rspamd/$NAME.pid
SCRIPTNAME=/etc/rc.d/$NAME

# Exit if the package is not installed
[ -x "$DAEMON" ] || exit 0

#
# Function that starts the daemon/service
#
do_start()
{
	# Return
	#   0 if daemon has been started
	#   1 if daemon was already running
	#   2 if daemon could not be started
	mkdir -m 755 -p /run/rspamd
	mkdir -m 755 -p /var/log/rspamd
	chown rspamd:rspamd /run/rspamd /var/log/rspamd
	$RSPAMADM configtest $DAEMON_ARGS > /dev/null \
		|| return 1
	start-stop-daemon --start --quiet --pidfile $PIDFILE --exec $DAEMON -- \
		$DAEMON_ARGS -u rspamd -g rspamd \
		|| return 2
}

#
# Function that stops the daemon/service
#
do_stop()
{
	# Return
	#   0 if daemon has been stopped
	#   1 if daemon was already stopped
	#   2 if daemon could not be stopped
	#   other if a failure occurred
	start-stop-daemon --stop --quiet --retry=TERM/30/KILL/5 --pidfile $PIDFILE
	RETVAL="$?"
	[ "$RETVAL" = 2 ] && return 2
	# Many daemons don't delete their pidfiles when they exit.
	rm -f $PIDFILE
	return "$RETVAL"
}

#
# Function that sends a SIGHUP to the daemon/service
#
do_reload() {
	start-stop-daemon --stop --signal 1 --quiet --pidfile $PIDFILE
	return 0
}

#
# Function that sends a SIGUSR1 to the daemon/service
#
do_reopenlog() {
	start-stop-daemon --stop --signal 10 --quiet --pidfile $PIDFILE
	return 0
}

case "$1" in
  start)
    do_start
    ;;
  stop)
    do_stop
    ;;
  status)
    status_of_proc -p $PIDFILE "$DAEMON" "$NAME" || exit $?
    ;;
  reload|force-reload)
    do_reload
    ;;
  reopenlog)
    do_reopenlog
    ;;
  restart)
    do_stop
    case "$?" in
      0|1)
	do_start
	;;
      *)
	# Failed to stop
        echo Error!
	;;
    esac
    ;;
  *)
    echo "Usage: $SCRIPTNAME {start|stop|restart|reload|force-reload|reopenlog}" >&2
    exit 3
    ;;
esac

exit 0
