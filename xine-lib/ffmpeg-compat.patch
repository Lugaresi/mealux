--- a/m4/decoders.m4
+++ b/m4/decoders.m4
@@ -134,13 +134,36 @@
             AC_DEFINE([HAVE_FFMPEG], 1, [Define this if you have the ffmpeg library])
             dnl Check presence of ffmpeg/avutil.h to see if it's old or new
             dnl style for headers. The new style would be preferred actually...
+            dnl Sigh. at least some 09/2022 ffmpeg version does violate the basic
+            dnl "get directly what you use directly" rule. especially, 
+            dnl libavformat/avformat.h includes libavcodec/packet.h which uses
+            dnl (but not includes) libavutil/avutil.h. this means that a mere
+            dnl AC_CHECK_HEADERS([libavformat/avformat.h]) will fail strangely :-/
             ac_save_CFLAGS="$CFLAGS" CFLAGS="$CFLAGS $FFMPEG_CFLAGS"
             ac_save_CPPFLAGS="$CPPFLAGS"
             CPPFLAGS="$CFLAGS $FFMPEG_CFLAGS $AVUTIL_CFLAGS"
-            AC_CHECK_HEADERS([ffmpeg/avutil.h])
-            AC_CHECK_HEADERS([libavutil/avutil.h])
-            AC_CHECK_HEADERS([libavutil/sha1.h])
-            AC_CHECK_HEADERS([libavutil/sha.h])
+            AC_CHECK_HEADERS([ffmpeg/avutil.h libavutil/avutil.h libavutil/sha1.h libavutil/mem.h libavutil/sha.h])
+            AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
+#include <libavutil/avutil.h>
+#include <libavcodec/avcodec.h>
+            ]],[[]])], [have_avutil_avcodec_h=yes], [have_avutil_avcodec_h=no])
+            test x"$have_avutil_avcodec_h" == x"yes" && AC_DEFINE([HAVE_AVUTIL_AVCODEC_H],[1],
+                [Define this if you have libavutil/avutil.h and libavcodec/avcodec.h.])
+            AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
+#include <libavutil/avutil.h>
+#include <libavcodec/avcodec.h>
+#include <libavformat/avformat.h>
+            ]],[[]])], [have_avformat_avformat_h=yes], [have_avformat_avformat_h=no])
+            test x"$have_avformat_avformat_h" == x"yes" && AC_DEFINE([HAVE_AVFORMAT_AVFORMAT_H],[1],
+                [Define this if you have libavformat/avformat.h.])
+            AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
+#include <libavutil/avutil.h>
+#include <libavcodec/avcodec.h>
+#include <libavformat/avformat.h>
+#include <libavformat/avio.h>
+            ]],[[]])], [have_avformat_avio_h=yes], [have_avformat_avio_h=no])
+            test x"$have_avformat_avio_h" == x"yes" && AC_DEFINE([HAVE_AVFORMAT_AVIO_H],[1],
+                [Define this if you have libavformat/avformat.h.])
             if test "$ac_cv_header_ffmpeg_avutil_h" = "yes" && test "$ac_cv_header_libavutil_avutil_h" = "yes"; then
                 AC_MSG_ERROR([old & new ffmpeg headers found - you need to clean up!])
             fi
--- a/m4/input.m4
+++ b/m4/input.m4
@@ -229,6 +229,7 @@
         fi
         if test x"$have_avformat" = x"yes"; then
             AC_DEFINE([HAVE_AVFORMAT], 1, [Define this if you have libavformat installed])
+            AC_CHECK_HEADERS([libavformat/avformat.h])
         fi
     fi
     AM_CONDITIONAL([ENABLE_AVFORMAT], [test x"$have_avformat" = x"yes"])
--- a/src/combined/ffmpeg/demux_avformat.c
+++ b/src/combined/ffmpeg/demux_avformat.c
@@ -30,5 +30,7 @@
 #include <errno.h>
 
+#include <libavutil/avutil.h>
+#include <libavcodec/avcodec.h>
 #include <libavformat/avformat.h>
 #include <libavformat/avio.h>
 
--- a/src/combined/ffmpeg/ff_audio_decoder.c
+++ b/src/combined/ffmpeg/ff_audio_decoder.c
@@ -31,11 +31,18 @@
 #include <pthread.h>
 #include <math.h>
 
-#ifdef HAVE_FFMPEG_AVUTIL_H
+#if defined(HAVE_LIBAVUTIL_AVUTIL_H)
+#  include <libavutil/avutil.h>
+#endif
+
+#if defined(HAVE_LIBAVUTIL_MEM_H)
+#  include <libavutil/mem.h>
+#endif
+
+#if defined(HAVE_AVUTIL_AVCODEC_H)
+#  include <libavcodec/avcodec.h>
+#else
 #  include <avcodec.h>
-#else
-#  include <libavcodec/avcodec.h>
-#  include <libavutil/mem.h>
 #endif
 
 #define LOG_MODULE "ffmpeg_audio_dec"
--- a/src/combined/ffmpeg/ff_video_decoder.c
+++ b/src/combined/ffmpeg/ff_video_decoder.c
@@ -1,5 +1,5 @@
 /*
- * Copyright (C) 2001-2021 the xine project
+ * Copyright (C) 2001-2022 the xine project
  *
  * This file is part of xine, a free video player.
  *
@@ -32,11 +32,18 @@
 #include <math.h>
 #include <assert.h>
 
-#ifdef HAVE_FFMPEG_AVUTIL_H
+#if defined(HAVE_LIBAVUTIL_AVUTIL_H)
+#  include <libavutil/avutil.h>
+#endif
+
+#if defined(HAVE_LIBAVUTIL_MEM_H)
+#  include <libavutil/mem.h>
+#endif
+
+#if defined(HAVE_AVUTIL_AVCODEC_H)
+#  include <libavcodec/avcodec.h>
+#else
 #  include <avcodec.h>
-#else
-#  include <libavcodec/avcodec.h>
-#  include <libavutil/mem.h>
 #endif
 
 #define LOG_MODULE "ffmpeg_video_dec"
--- a/src/combined/ffmpeg/ffmpeg_compat.h
+++ b/src/combined/ffmpeg/ffmpeg_compat.h
@@ -1,5 +1,5 @@
 /*
- * Copyright (C) 2000-2021 the xine project
+ * Copyright (C) 2000-2022 the xine project
  *
  * This file is part of xine, a unix video player.
  *
@@ -25,21 +25,23 @@
 
 #define XFF_INT_VERSION(major,minor,micro) ((major<<16)|(minor<<8)|micro)
 
-#ifndef LIBAVCODEC_VERSION_INT
-#  if defined(LIBAVCODEC_VERSION_MAJOR) && defined(LIBAVCODEC_VERSION_MINOR)
-#    define LIBAVCODEC_VERSION_INT XFF_INT_VERSION(LIBAVCODEC_VERSION_MAJOR,LIBAVCODEC_VERSION_MINOR,0)
-#  else
-#    error ffmpeg headers must be included first !
-#  endif
-#endif
-
-#ifndef LIBAVUTIL_VERSION_INT
-#  if defined(LIBAVUTIL_VERSION_MAJOR) && defined(LIBAVUTIL_VERSION_MINOR)
-#    define LIBAVUTIL_VERSION_INT XFF_INT_VERSION(LIBAVUTIL_VERSION_MAJOR,LIBAVUTIL_VERSION_MINOR,0)
-#  else
-#    error ffmpeg headers must be included first !
-#  endif
-#endif
+/** NOTE: since 2022-09-01, ffmpeg headers are more detached from each other.
+ *  this goes that far:
+ *  libavformat/avformat.h includes libavcodec/packet.h which uses
+ *  (but not includes) libavutil/avutil.h :-/ */
+
+#if !defined(LIBAVUTIL_VERSION_INT) && defined(LIBAVUTIL_VERSION_MAJOR) && defined(LIBAVUTIL_VERSION_MINOR)
+#  define LIBAVUTIL_VERSION_INT XFF_INT_VERSION(LIBAVUTIL_VERSION_MAJOR,LIBAVUTIL_VERSION_MINOR,0)
+#endif
+#if !defined(LIBAVUTIL_VERSION_INT)
+#  error avutil.h must be included first !
+#endif
+
+#if !defined(LIBAVCODEC_VERSION_INT) && defined(LIBAVCODEC_VERSION_MAJOR) && defined(LIBAVCODEC_VERSION_MINOR)
+#  define LIBAVCODEC_VERSION_INT XFF_INT_VERSION(LIBAVCODEC_VERSION_MAJOR,LIBAVCODEC_VERSION_MINOR,0)
+#endif
+
+#if defined(LIBAVCODEC_VERSION_INT)
 
 #if LIBAVCODEC_VERSION_INT >= XFF_INT_VERSION(52,0,0)
 #  define bits_per_sample bits_per_coded_sample
@@ -134,6 +136,134 @@
 #  define XFF_VAAPI 1 /** << libavcodec/vaapi.h */
 #else
 #  define XFF_VAAPI 2 /** << libavutil/hwcontext.h, libavutil/hwcontext_vaapi.h */
+#endif
+
+#if LIBAVCODEC_VERSION_INT >= XFF_INT_VERSION(54,25,0)
+/* dxr3/ffmpeg_encoder */
+#  define CODEC_ID_MPEG1VIDEO AV_CODEC_ID_MPEG1VIDEO
+/* video_out/video_out_vaapi */
+#  define CODEC_ID_MPEG2VIDEO AV_CODEC_ID_MPEG2VIDEO
+#  define CODEC_ID_MPEG4      AV_CODEC_ID_MPEG4
+#  define CODEC_ID_H263       AV_CODEC_ID_H263
+#  define CODEC_ID_H264       AV_CODEC_ID_H264
+#  define CODEC_ID_WMV3       AV_CODEC_ID_WMV3
+/* video_out/video_out_vaapi, ff_video_decoder */
+#  define CODEC_ID_VC1        AV_CODEC_ID_VC1
+/* ff_video_decoder */
+#  define CODEC_ID_SVQ3       AV_CODEC_ID_SVQ3
+#  define CODEC_ID_MSMPEG4V1  AV_CODEC_ID_MSMPEG4V1
+#  define CODEC_ID_MSMPEG4V2  AV_CODEC_ID_MSMPEG4V2
+#  define CODEC_ID_MSMPEG4V3  AV_CODEC_ID_MSMPEG4V3
+#  define CODEC_ID_WMV1       AV_CODEC_ID_WMV1
+#  define CODEC_ID_WMV2       AV_CODEC_ID_WMV2
+/* demux_avformat */
+#  define CODEC_ID_PCM_S16LE  AV_CODEC_ID_PCM_S16LE
+#  define CODEC_ID_PCM_S16BE  AV_CODEC_ID_PCM_S16BE
+#  define CODEC_ID_MP2        AV_CODEC_ID_MP2
+#  define CODEC_ID_AC3        AV_CODEC_ID_AC3
+/* ff_*_decoder mapping is already handled by mkcodeclists.pl */
+#endif
+
+#if LIBAVCODEC_VERSION_INT >= XFF_INT_VERSION(55,0,100)
+#  define XFF_AV_BUFFER 1
+#endif
+
+/* 0 (no), 1 (yes), 2 (deprecated but still needed to make direct rendering work) */
+#if LIBAVCODEC_VERSION_INT < XFF_INT_VERSION(55,0,100)
+#  define XFF_THREAD_SAFE_CB 0
+#elif LIBAVCODEC_VERSION_INT < XFF_INT_VERSION(59,0,100)
+#  define XFF_THREAD_SAFE_CB 1
+#elif LIBAVCODEC_VERSION_INT < XFF_INT_VERSION(60,0,0)
+#  define XFF_THREAD_SAFE_CB 2
+#else
+/* now callbacks shall always be thread safe. */
+#  define XFF_THREAD_SAFE_CB 0
+#endif
+
+/* function aliases */
+
+#if LIBAVCODEC_VERSION_INT < XFF_INT_VERSION(52,66,0)
+#  define XFF_EDGE_WIDTH() (16)
+#elif LIBAVCODEC_VERSION_INT < XFF_INT_VERSION(55,48,102)
+#  define XFF_EDGE_WIDTH() avcodec_get_edge_width()
+#else
+/* edges not needed anymore supposedly */
+#  define XFF_EDGE_WIDTH() (0)
+#endif
+
+#if LIBAVCODEC_VERSION_INT < XFF_INT_VERSION(53,8,0)
+#  define XFF_AVCODEC_INIT() avcodec_init()
+#else
+#  define XFF_AVCODEC_INIT() do {} while(0)
+#endif
+
+#if LIBAVCODEC_VERSION_INT < XFF_INT_VERSION(53,6,0)
+#  define XFF_ALLOC_CONTEXT() avcodec_alloc_context()
+#else
+#  define XFF_ALLOC_CONTEXT() avcodec_alloc_context3(NULL)
+#endif
+
+#if LIBAVCODEC_VERSION_INT < XFF_INT_VERSION(53,6,0)
+#  define XFF_AVCODEC_OPEN(ctx,codec) avcodec_open(ctx,codec)
+#else
+#  define XFF_AVCODEC_OPEN(ctx,codec) avcodec_open2(ctx, codec, NULL)
+#endif
+
+#if LIBAVCODEC_VERSION_INT < XFF_INT_VERSION(55,63,100)
+#  define XFF_FREE_CONTEXT(pp) do {av_free(pp); pp = NULL;} while (0)
+#else
+#  define XFF_FREE_CONTEXT(pp) avcodec_free_context(&(pp))
+#endif
+
+#if LIBAVCODEC_VERSION_INT < XFF_INT_VERSION(54,59,100)
+#  define XFF_ALLOC_FRAME() avcodec_alloc_frame()
+#  define XFF_FREE_FRAME(pp) do {av_free(pp); pp = NULL;} while (0)
+#elif LIBAVCODEC_VERSION_INT < XFF_INT_VERSION(55,45,101)
+#  define XFF_ALLOC_FRAME() avcodec_alloc_frame()
+#  define XFF_FREE_FRAME(pp) avcodec_free_frame(&(pp))
+#else
+#  define XFF_ALLOC_FRAME() av_frame_alloc()
+#  define XFF_FREE_FRAME(pp) av_frame_free(&(pp))
+#endif
+
+#if LIBAVCODEC_VERSION_INT < XFF_INT_VERSION(57,12,100)
+#  define XFF_PACKET_DECL(_p) AVPacket _p##_stat, *_p
+#  define XFF_PACKET_NEW(_p) _p = &_p##_stat, av_init_packet (_p)
+#  define XFF_PACKET_UNREF(_p) av_free_packet (_p)
+#elif LIBAVCODEC_VERSION_INT < XFF_INT_VERSION(59,0,100) /** << revise this */
+#  define XFF_PACKET_DECL(_p) AVPacket _p##_stat, *_p
+#  define XFF_PACKET_NEW(_p) _p = &_p##_stat, av_init_packet (_p)
+#  define XFF_PACKET_UNREF(_p) av_packet_unref (_p)
+#else
+#  define XFF_PACKET_DECL(_p) AVPacket *_p
+#  define XFF_PACKET_NEW(_p) _p = av_packet_alloc ()
+#  define XFF_PACKET_UNREF(_p) av_packet_free (&(_p))
+#endif
+
+#ifndef AV_INPUT_BUFFER_PADDING_SIZE
+#  define AV_INPUT_BUFFER_PADDING_SIZE FF_INPUT_BUFFER_PADDING_SIZE
+#endif
+#ifndef AV_CODEC_CAP_DR1
+#  define AV_CODEC_CAP_DR1 CODEC_CAP_DR1
+#endif
+#ifndef AV_CODEC_FLAG2_FAST
+#  define AV_CODEC_FLAG2_FAST CODEC_FLAG2_FAST
+#endif
+
+#if LIBAVCODEC_VERSION_INT < XFF_INT_VERSION(58,10,100)
+#  define XFF_AVCODEC_REGISTER_ALL() avcodec_register_all()
+#else
+#  define XFF_AVCODEC_REGISTER_ALL() do {} while(0)
+#endif
+
+#if LIBAVCODEC_VERSION_INT < XFF_INT_VERSION(59,24,100)
+#  define XFF_AUDIO_CHANNEL_LAYOUT 1 /* AVCodecContext.channels, .channel_leyout */
+#else
+#  define XFF_AUDIO_CHANNEL_LAYOUT 2 /* AVCodecContext.ch_layout.nb_channels, .ch_layout.u.mask */
+#endif
+
+#ifndef AVCODEC_MAX_AUDIO_FRAME_SIZE
+#  define AVCODEC_MAX_AUDIO_FRAME_SIZE 192000
 #endif
 
 #if LIBAVUTIL_VERSION_INT >= XFF_INT_VERSION(52,0,0)
@@ -168,127 +298,9 @@
 #  define CODEC_FLAG_BITEXACT AV_CODEC_FLAG_BITEXACT
 #endif
 
-#if LIBAVCODEC_VERSION_INT >= XFF_INT_VERSION(54,25,0)
-/* dxr3/ffmpeg_encoder */
-#  define CODEC_ID_MPEG1VIDEO AV_CODEC_ID_MPEG1VIDEO
-/* video_out/video_out_vaapi */
-#  define CODEC_ID_MPEG2VIDEO AV_CODEC_ID_MPEG2VIDEO
-#  define CODEC_ID_MPEG4      AV_CODEC_ID_MPEG4
-#  define CODEC_ID_H263       AV_CODEC_ID_H263
-#  define CODEC_ID_H264       AV_CODEC_ID_H264
-#  define CODEC_ID_WMV3       AV_CODEC_ID_WMV3
-/* video_out/video_out_vaapi, ff_video_decoder */
-#  define CODEC_ID_VC1        AV_CODEC_ID_VC1
-/* ff_video_decoder */
-#  define CODEC_ID_SVQ3       AV_CODEC_ID_SVQ3
-#  define CODEC_ID_MSMPEG4V1  AV_CODEC_ID_MSMPEG4V1
-#  define CODEC_ID_MSMPEG4V2  AV_CODEC_ID_MSMPEG4V2
-#  define CODEC_ID_MSMPEG4V3  AV_CODEC_ID_MSMPEG4V3
-#  define CODEC_ID_WMV1       AV_CODEC_ID_WMV1
-#  define CODEC_ID_WMV2       AV_CODEC_ID_WMV2
-/* demux_avformat */
-#  define CODEC_ID_PCM_S16LE  AV_CODEC_ID_PCM_S16LE
-#  define CODEC_ID_PCM_S16BE  AV_CODEC_ID_PCM_S16BE
-#  define CODEC_ID_MP2        AV_CODEC_ID_MP2
-#  define CODEC_ID_AC3        AV_CODEC_ID_AC3
-/* ff_*_decoder mapping is already handled by mkcodeclists.pl */
-#endif
-
-#ifndef AVCODEC_MAX_AUDIO_FRAME_SIZE
-#  define AVCODEC_MAX_AUDIO_FRAME_SIZE 192000
-#endif
-
-#if LIBAVCODEC_VERSION_INT >= XFF_INT_VERSION(55,0,100)
-#  define XFF_AV_BUFFER 1
-#endif
-
-/* 0 (no), 1 (yes), 2 (deprecated but still needed to make direct rendering work) */
-#if LIBAVCODEC_VERSION_INT < XFF_INT_VERSION(55,0,100)
-#  define XFF_THREAD_SAFE_CB 0
-#elif LIBAVCODEC_VERSION_INT < XFF_INT_VERSION(59,0,100)
-#  define XFF_THREAD_SAFE_CB 1
-#elif LIBAVCODEC_VERSION_INT < XFF_INT_VERSION(60,0,0)
-#  define XFF_THREAD_SAFE_CB 2
-#else
-/* now callbacks shall always be thread safe. */
-#  define XFF_THREAD_SAFE_CB 0
-#endif
-
-/* function aliases */
-
-#if LIBAVCODEC_VERSION_INT < XFF_INT_VERSION(52,66,0)
-#  define XFF_EDGE_WIDTH() (16)
-#elif LIBAVCODEC_VERSION_INT < XFF_INT_VERSION(55,48,102)
-#  define XFF_EDGE_WIDTH() avcodec_get_edge_width()
-#else
-/* edges not needed anymore supposedly */
-#  define XFF_EDGE_WIDTH() (0)
-#endif
-
-#if LIBAVCODEC_VERSION_INT < XFF_INT_VERSION(53,8,0)
-#  define XFF_AVCODEC_INIT() avcodec_init()
-#else
-#  define XFF_AVCODEC_INIT() do {} while(0)
-#endif
-
-#if LIBAVCODEC_VERSION_INT < XFF_INT_VERSION(53,6,0)
-#  define XFF_ALLOC_CONTEXT() avcodec_alloc_context()
-#else
-#  define XFF_ALLOC_CONTEXT() avcodec_alloc_context3(NULL)
-#endif
-
-#if LIBAVCODEC_VERSION_INT < XFF_INT_VERSION(53,6,0)
-#  define XFF_AVCODEC_OPEN(ctx,codec) avcodec_open(ctx,codec)
-#else
-#  define XFF_AVCODEC_OPEN(ctx,codec) avcodec_open2(ctx, codec, NULL)
-#endif
-
-#if LIBAVCODEC_VERSION_INT < XFF_INT_VERSION(55,63,100)
-#  define XFF_FREE_CONTEXT(pp) do {av_free(pp); pp = NULL;} while (0)
-#else
-#  define XFF_FREE_CONTEXT(pp) avcodec_free_context(&(pp))
-#endif
-
-#if LIBAVCODEC_VERSION_INT < XFF_INT_VERSION(54,59,100)
-#  define XFF_ALLOC_FRAME() avcodec_alloc_frame()
-#  define XFF_FREE_FRAME(pp) do {av_free(pp); pp = NULL;} while (0)
-#elif LIBAVCODEC_VERSION_INT < XFF_INT_VERSION(55,45,101)
-#  define XFF_ALLOC_FRAME() avcodec_alloc_frame()
-#  define XFF_FREE_FRAME(pp) avcodec_free_frame(&(pp))
-#else
-#  define XFF_ALLOC_FRAME() av_frame_alloc()
-#  define XFF_FREE_FRAME(pp) av_frame_free(&(pp))
-#endif
-
-#if LIBAVCODEC_VERSION_INT < XFF_INT_VERSION(57,12,100)
-#  define XFF_PACKET_DECL(_p) AVPacket _p##_stat, *_p
-#  define XFF_PACKET_NEW(_p) _p = &_p##_stat, av_init_packet (_p)
-#  define XFF_PACKET_UNREF(_p) av_free_packet (_p)
-#elif LIBAVCODEC_VERSION_INT < XFF_INT_VERSION(59,0,100) /** << revise this */
-#  define XFF_PACKET_DECL(_p) AVPacket _p##_stat, *_p
-#  define XFF_PACKET_NEW(_p) _p = &_p##_stat, av_init_packet (_p)
-#  define XFF_PACKET_UNREF(_p) av_packet_unref (_p)
-#else
-#  define XFF_PACKET_DECL(_p) AVPacket *_p
-#  define XFF_PACKET_NEW(_p) _p = av_packet_alloc ()
-#  define XFF_PACKET_UNREF(_p) av_packet_free (&(_p))
-#endif
-
-#ifndef AV_INPUT_BUFFER_PADDING_SIZE
-#  define AV_INPUT_BUFFER_PADDING_SIZE FF_INPUT_BUFFER_PADDING_SIZE
-#endif
-#ifndef AV_CODEC_CAP_DR1
-#  define AV_CODEC_CAP_DR1 CODEC_CAP_DR1
-#endif
-#ifndef AV_CODEC_FLAG2_FAST
-#  define AV_CODEC_FLAG2_FAST CODEC_FLAG2_FAST
-#endif
-
-#if LIBAVCODEC_VERSION_INT < XFF_INT_VERSION(58,10,100)
-#  define XFF_AVCODEC_REGISTER_ALL() avcodec_register_all()
-#else
-#  define XFF_AVCODEC_REGISTER_ALL() do {} while(0)
-#endif
+#else /* defined(LIBAVCODEC_VERSION_INT) */
+#  error avcodec.h must be included first !
+#endif /* defined(LIBAVCODEC_VERSION_INT) */
 
 #endif /* XINE_AVCODEC_COMPAT_H */
 
--- a/src/combined/ffmpeg/ffmpeg_decoder.c
+++ b/src/combined/ffmpeg/ffmpeg_decoder.c
@@ -26,12 +26,20 @@
 
 #include <pthread.h>
 
-#ifdef HAVE_FFMPEG_AVUTIL_H
-#  include <avcodec.h>
-#else
-#  include <libavcodec/avcodec.h>
+#if defined(HAVE_LIBAVUTIL_AVUTIL_H)
+#  include <libavutil/avutil.h>
+#endif
+
+#if defined(HAVE_LIBAVUTIL_MEM_H)
 #  include <libavutil/mem.h>
 #endif
+
+#if defined(HAVE_AVUTIL_AVCODEC_H)
+#  include <libavcodec/avcodec.h>
+#else
+#  include <avcodec.h>
+#endif
+
 #ifdef HAVE_AVFORMAT
 #  include <libavformat/avformat.h> // av_register_all()
 #endif
--- a/src/combined/ffmpeg/input_avio.c
+++ b/src/combined/ffmpeg/input_avio.c
@@ -29,5 +29,7 @@
 #include <pthread.h>
 
+#include <libavutil/avutil.h>
+#include <libavcodec/avcodec.h>
 #include <libavformat/avio.h>
 
 #define LOG_MODULE "libavio"

